openapi: 3.0.0
info:
  title: Carts
  version: 1.0.0
  license:
    name: MIT
paths:
  /carts:
    get:
      summary: List all items in the cart
      operationId: listItems
      tags:
        - carts
      responses:
        200:
          description: A paged array of items
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Empty the cart
      operationId: emptyItems
      tags:
        - carts
      responses:
        200:
          description: ok
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /carts/{productId}:
    get:
      summary: Info for a specified item
      operationId: showItemById
      tags:
        - operation-on-single-item
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: string
      responses:
        200:
          description: The specified item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: delete the specified item
      operationId: removeItemById
      tags:
        - operation-on-single-item
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: string
      responses:
        200:
          description: ok
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: change the quantity of the specified item
      operationId: updateItemById
      tags:
        - operation-on-single-item
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product
          schema:
            type: string
        - name: quantity
          in: query
          required: true
          description: The amount of change in the quantity of the product (could be negative)
          schema:
            type: integer
      responses:
        200:
          description: ok
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

#DTO 定义了后端和前端交互的对象，mapstruct 负责将实际模型转换为对应的 DTO
#这里的 DTO 类由 openapi 根据下述说明自动生成
components:
  schemas:
    Item:
      type: object
      required:
        - id
        - name
        - quantity
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        image:
          type: string
        quantity:
          type: integer

    Items:
      type: array
      items:
        $ref: "#/components/schemas/Item"

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
